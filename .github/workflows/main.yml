name: Build Android Project

on: [push, pull_request]

jobs:
  buildAndroid:
    name: Build Android
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true

      - name: Setup env
        run: sudo apt install unzip -y

      - name: Fetch Pojlib Release
        id: fetch-latest-release-pojlib
        uses: gregziegan/fetch-latest-release@v2.0.0
        with:
          repo_path: QuestCraftPlusPlus/Pojlib

      - name: Download Pojlib
        run: |
          wget https://github.com/QuestCraftPlusPlus/Pojlib/releases/download/test/lib-release.aar
          cp -f lib-release.aar $GITHUB_WORKSPACE/Assets/Plugins/Android

      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-Android
          restore-keys: Library-

      - uses: jlumbroso/free-disk-space@v1.3.1

      - uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          unityVersion: 2021.3.37f1
          targetPlatform: Android
          customImage: 'unityci/editor:2021.3.37f1-android-1'
          androidExportType: 'androidPackage'
          androidTargetSdkVersion: '32'

      - name: Prepare APK for Release
        run: |
          APK_NAME="Questcraft-$(date +%Y/%m/%d)"
          mv build/Android/*.apk build/Android/${APK_NAME}.apk
          echo "APK_NAME=${APK_NAME}.apk" >> $GITHUB_ENV

      - uses: actions/upload-artifact@v3
        with:
          name: Build-Android
          path: build/Android

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "release-$(date +%Y%m%d%H%M%S)"
          release_name: "Questcraft-$(date +%Y/%m/%d)"
          body: "Release for Questcraft-$(date +%Y/%m/%d)"
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/Android/${{ env.APK_NAME }}
          asset_name: ${{ env.APK_NAME }}
          asset_content_type: application/zip
